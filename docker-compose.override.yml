# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: "3.4"

services:
  reverseproxy:
    container_name: reverseproxy
    restart: always
    ports:
      - "44344:44344"
    depends_on:
      - identityserver
      - catalogapi
      - basketapi
      - discountapi
      - orderingapi

  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  discountdb:
    image: postgres
    container_name: discountdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1q2q3q4q
      - POSTGRES_DB=discountdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "1q2q3q4q"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    ports:
      - "15672:15672"
      - "5672:5672"

    volumes:
      - ./rabbitmq:/var/lib/rabbitmq

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eShopping.net
      - PGADMIN_DEFAULT_PASSWORD=1q2q3q4q
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalogapi:
    container_name: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Types"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "9000:80"

  basketapi:
    container_name: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings__ConnectionString=basketdb:6379"
      - "GrpcSettings__DiscountUrl=http://discountapi"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "9001:80"

  discountapi:
    container_name: discountapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=postgres;User Id=postgres;Password=1q2q3q4q;"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    #      - ASPNETCORE_URLS=http://*:9002
    depends_on:
      - discountdb
    ports:
      - "9002:80"

  orderingapi:
    container_name: orderingapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      #      - ASPNETCORE_URLS=http://*:9003
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=bombastik;Password=1q2q3q4q"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "9003:80"

  ocelotapi:
    container_name: ocelotapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - identityserver
      - catalogapi
      - basketapi
      - discountapi
      - orderingapi
    ports:
      - "9010:80"
  identityserver:
    container_name: identityserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # - ASPNETCORE_URLS=http://*:9011
    ports:
      - "9011:9011"

  elasticsearch:
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"      
